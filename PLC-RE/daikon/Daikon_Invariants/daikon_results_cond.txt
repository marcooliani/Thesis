Daikon version 5.8.14, released October 6, 2022; http://plse.cs.washington.edu/daikon.
Reading splitter info files (read 1 spinfo file, 1 splitter)
Reading declaration files .aprogram.point:::POINT: 1 of 1 splitters successful
(read 1 decls file)
Processing trace data; reading 1 dtrace file:

===========================================================================
aprogram.point:::POINT
P201 == P202
P201 == P204
P201 == P206
P201 == P102
P201 == prev_P201
P201 == prev_P202
P201 == prev_P204
P201 == prev_P206
P201 == prev_P102
P203 == P205
prev_P203 == prev_P205
FIT201 >= 0.0
MV201 one of { 0.0, 1.0, 2.0 }
P201 == 1.0
P203 one of { 1.0, 2.0 }
FIT101 >= 0.0
MV101 one of { 0.0, 1.0, 2.0 }
P101 one of { 1.0, 2.0 }
prev_MV201 one of { 0.0, 1.0, 2.0 }
prev_P203 one of { 1.0, 2.0 }
prev_MV101 one of { 0.0, 1.0, 2.0 }
prev_P101 one of { 1.0, 2.0 }
AIT201 > AIT202
AIT201 < AIT203
AIT201 > FIT201
AIT201 > MV201
AIT201 > P201
AIT201 > P203
AIT201 > FIT101
AIT201 < LIT101
AIT201 > MV101
AIT201 > P101
AIT201 > prev_MV201
AIT201 > prev_P203
AIT201 < prev_LIT101
AIT201 > slope_LIT101
AIT201 > prev_MV101
AIT201 > prev_P101
AIT202 < AIT203
AIT202 > FIT201
AIT202 > MV201
AIT202 > P201
AIT202 > P203
AIT202 > FIT101
AIT202 < LIT101
AIT202 > MV101
AIT202 > P101
AIT202 > prev_MV201
AIT202 > prev_P203
AIT202 < prev_LIT101
AIT202 > slope_LIT101
AIT202 > prev_MV101
AIT202 > prev_P101
AIT203 > FIT201
AIT203 > MV201
AIT203 > P201
AIT203 > P203
AIT203 > FIT101
AIT203 < LIT101
AIT203 > MV101
AIT203 > P101
AIT203 > prev_MV201
AIT203 > prev_P203
AIT203 < prev_LIT101
AIT203 > slope_LIT101
AIT203 > prev_MV101
AIT203 > prev_P101
FIT201 != P201
FIT201 != P203
FIT201 < LIT101
FIT201 != P101
FIT201 != prev_P203
FIT201 < prev_LIT101
FIT201 != prev_P101
MV201 % P203 == 0
MV201 < LIT101
MV201 % P101 == 0
MV201 % prev_P203 == 0
MV201 < prev_LIT101
MV201 % prev_P101 == 0
P201 <= P203
P201 != FIT101
P201 < LIT101
P201 <= P101
P201 <= prev_P203
P201 < prev_LIT101
P201 > slope_LIT101
P201 <= prev_P101
P203 != FIT101
P203 < LIT101
prev_MV201 % P203 == 0
P203 < prev_LIT101
P203 > slope_LIT101
FIT101 < LIT101
FIT101 != P101
FIT101 != prev_P203
FIT101 < prev_LIT101
FIT101 != prev_P101
LIT101 > MV101
LIT101 > P101
LIT101 > prev_MV201
LIT101 > prev_P203
LIT101 > slope_LIT101
LIT101 > prev_MV101
LIT101 > prev_P101
MV101 < prev_LIT101
prev_MV201 % P101 == 0
P101 < prev_LIT101
P101 > slope_LIT101
prev_MV201 % prev_P203 == 0
prev_MV201 < prev_LIT101
prev_MV201 % prev_P101 == 0
prev_P203 < prev_LIT101
prev_P203 > slope_LIT101
prev_LIT101 > slope_LIT101
prev_LIT101 > prev_MV101
prev_LIT101 > prev_P101
slope_LIT101 < prev_P101
===========================================================================
aprogram.point:::POINT;condition="not(LIT101 < 450 || LIT101 > 850)"
Exiting Daikon.
