#!/usr/bin/env python3
import ipaddress

import pyshark
import socket
import binascii
from scapy.all import *
from scapy.layers.l2 import Ether

import cip

cap = pyshark.FileCapture('../../datasets_SWaT/2017/Network/output_pcap5', include_raw=True, use_json=True)

lista = dict()

#packets = rdpcap('/tmp/output_pcap5.pcap')

# Iterate over packets and print CIP data
for packet in cap:
    if "CIP" in packet:
        src = packet.ip.src
        dst = packet.ip.dst
        print(src, dst)
        print("CIP data:")
        print(packet['CIP'])
        print(packet.cip.request_path)


'''
for packet in cap:
    src = packet.ip.src
    dst = packet.ip.dst
    print(src, dst)
    #raw = packet.get_raw_packet()
    #print(Ether(packet.get_raw_packet()))
    #pkt = Ether(raw)

    if "CIP" in packet:
        print(packet['CIP'])


    #pkt.show()


# tshark -r NetworkTraffic.pcap -t ad -T fields -e frame.number -e _ws.col.Time -e ip.src -e ip.dst
# -e _ws.col.Protocol -Y modbus -e modbus.func_code -e modbus.word_cnt -e modbus.regnum16 -e modbus.regval_uint16 -e modbus.bit_cnt
# -e modbus.bitnum -e modbus.bitval -E header=y -E separator=, -E aggregator=/s > test_thasrk.csv


rawpkt = binascii.unhexlify(
    '801d9cc8bde7001d9cc672e808004500005e2f95400080064746c0a80164'
    'c0a8010ac203af128e7a438701bd1e5e5018829c2a07000070001e000200'
    '1600000000000000000000000000000000000000000000000200a1000400'
    '2042b5ffb1000a008a074c0320b225002200')
pkt = Ether(rawpkt)
#pkt.show()

pkt[cip.CIP].show()


# rawpkt = binascii.unhexlify(packet.get_raw_packet())
#print(pkt[cip.CIP].path)
pkt.show()
'''
